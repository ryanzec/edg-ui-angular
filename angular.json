{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "cli": {
    "packageManager": "pnpm",
    "schematicCollections": ["angular-eslint"],
    "analytics": false
  },
  "newProjectRoot": "projects",
  "projects": {
    "customer-portal": {
      "projectType": "application",
      "root": "projects/customer-portal",
      "sourceRoot": "projects/customer-portal/src",
      "prefix": "cp",
      "schematics": {
        "@schematics/angular:component": {
          "style": "css"
        }
      },
      "architect": {
        "build": {
          "builder": "@angular/build:application",
          "options": {
            "browser": "projects/customer-portal/src/main.ts",
            "tsConfig": "projects/customer-portal/tsconfig.app.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "projects/customer-portal/public"
              }
            ],
            "styles": [
              "projects/shared-ui/src/lib/styles.css",
              {
                "input": "projects/shared-ui/src/lib/tailwind.css",
                "bundleName": "tailwind"
              },
              {
                "input": "@phosphor-icons/web/regular/style.css",
                "bundleName": "phosphor-icons"
              },
              {
                "input": "@phosphor-icons/web/bold/style.css",
                "bundleName": "phosphor-icons"
              },
              {
                "input": "@phosphor-icons/web/fill/style.css",
                "bundleName": "phosphor-icons"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/400.css",
                "bundleName": "geist-sans"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/500.css",
                "bundleName": "geist-sans"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/600.css",
                "bundleName": "geist-sans"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/700.css",
                "bundleName": "geist-sans"
              }
            ]
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "1MB"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "4kB",
                  "maximumError": "8kB"
                }
              ],
              "outputHashing": "all",
              "fileReplacements": [
                {
                  "replace": "projects/customer-portal/src/environments/environment.ts",
                  "with": "projects/customer-portal/src/environments/environment.production.ts"
                }
              ]
            },
            "staging": {
              "fileReplacements": [
                {
                  "replace": "projects/customer-portal/src/environments/environment.ts",
                  "with": "projects/customer-portal/src/environments/environment.staging.ts"
                }
              ]
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true,
              "fileReplacements": [
                {
                  "replace": "projects/customer-portal/src/environments/environment.ts",
                  "with": "projects/customer-portal/src/environments/environment.development.ts"
                }
              ]
            },
            "local": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "development"
        },
        "serve": {
          "builder": "@angular/build:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "customer-portal:build:production"
            },
            "staging": {
              "buildTarget": "customer-portal:build:staging"
            },
            "development": {
              "buildTarget": "customer-portal:build:development"
            },
            "local": {
              "buildTarget": "customer-portal:build:local"
            }
          },
          "defaultConfiguration": "local",
          "options": {
            "ssl": true,
            "sslKey": "../../ssl-key.pem",
            "sslCert": "../../ssl-cert.pem"
          }
        },
        "extract-i18n": {
          "builder": "@angular/build:extract-i18n"
        },
        "test": {
          "builder": "@angular/build:unit-test",
          "options": {
            "tsConfig": "projects/customer-portal/tsconfig.spec.json",
            "buildTarget": "customer-portal:build:development",
            "runner": "vitest",
            "providersFile": "projects/customer-portal/src/test-providers.ts"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "lintFilePatterns": ["projects/customer-portal/src/**/*.ts", "projects/customer-portal/src/**/*.html"],
            "eslintConfig": "projects/customer-portal/eslint.config.cjs"
          }
        }
      }
    },
    "internal-portal": {
      "projectType": "application",
      "root": "projects/internal-portal",
      "sourceRoot": "projects/internal-portal/src",
      "prefix": "ip",
      "schematics": {
        "@schematics/angular:component": {
          "style": "css"
        }
      },
      "architect": {
        "build": {
          "builder": "@angular/build:application",
          "options": {
            "browser": "projects/internal-portal/src/main.ts",
            "tsConfig": "projects/internal-portal/tsconfig.app.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "projects/internal-portal/public"
              }
            ],
            "styles": [
              "projects/shared-ui/src/lib/styles.css",
              {
                "input": "projects/shared-ui/src/lib/tailwind.css",
                "bundleName": "tailwind"
              },
              {
                "input": "@phosphor-icons/web/regular/style.css",
                "bundleName": "phosphor-icons"
              },
              {
                "input": "@phosphor-icons/web/bold/style.css",
                "bundleName": "phosphor-icons"
              },
              {
                "input": "@phosphor-icons/web/fill/style.css",
                "bundleName": "phosphor-icons"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/400.css",
                "bundleName": "geist-sans"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/500.css",
                "bundleName": "geist-sans"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/600.css",
                "bundleName": "geist-sans"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/700.css",
                "bundleName": "geist-sans"
              }
            ]
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "1MB"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "4kB",
                  "maximumError": "8kB"
                }
              ],
              "outputHashing": "all",
              "fileReplacements": [
                {
                  "replace": "projects/internal-portal/src/environments/environment.ts",
                  "with": "projects/internal-portal/src/environments/environment.production.ts"
                }
              ]
            },
            "staging": {
              "fileReplacements": [
                {
                  "replace": "projects/internal-portal/src/environments/environment.ts",
                  "with": "projects/internal-portal/src/environments/environment.staging.ts"
                }
              ]
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true,
              "fileReplacements": [
                {
                  "replace": "projects/internal-portal/src/environments/environment.ts",
                  "with": "projects/internal-portal/src/environments/environment.development.ts"
                }
              ]
            },
            "local": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "development"
        },
        "serve": {
          "builder": "@angular/build:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "customer-portal:build:production"
            },
            "staging": {
              "buildTarget": "customer-portal:build:staging"
            },
            "development": {
              "buildTarget": "customer-portal:build:development"
            },
            "local": {
              "buildTarget": "customer-portal:build:local"
            }
          },
          "defaultConfiguration": "local",
          "options": {
            "ssl": true,
            "sslKey": "../../ssl-key.pem",
            "sslCert": "../../ssl-cert.pem"
          }
        },
        "extract-i18n": {
          "builder": "@angular/build:extract-i18n"
        },
        "test": {
          "builder": "@angular/build:unit-test",
          "options": {
            "tsConfig": "projects/internal-portal/tsconfig.spec.json",
            "buildTarget": "internal-portal:build:development",
            "runner": "vitest",
            "providersFile": "projects/internal-portal/src/test-providers.ts"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "lintFilePatterns": ["projects/internal-portal/src/**/*.ts", "projects/internal-portal/src/**/*.html"],
            "eslintConfig": "projects/internal-portal/eslint.config.cjs"
          }
        }
      }
    },
    "shared-ui": {
      "projectType": "library",
      "root": "projects/shared-ui",
      "sourceRoot": "projects/shared-ui/src",
      "prefix": "org",
      "schematics": {
        "@schematics/angular:component": {
          "style": "css"
        }
      },
      "architect": {
        "build": {
          "builder": "@angular/build:ng-packagr",
          "configurations": {
            "production": {
              "tsConfig": "projects/shared-ui/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "projects/shared-ui/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular/build:unit-test",
          "options": {
            "tsConfig": "projects/shared-ui/tsconfig.spec.json",
            "buildTarget": "shared-ui:build:development",
            "runner": "vitest",
            "providersFile": "projects/shared-ui/src/test-providers.ts"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "lintFilePatterns": ["projects/shared-ui/**/*.ts", "projects/shared-ui/**/*.html"],
            "eslintConfig": "projects/shared-ui/eslint.config.cjs"
          }
        }
      }
    },
    "storybook-host": {
      "projectType": "application",
      "root": ".",
      "sourceRoot": ".storybook",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/storybook-host",
            "index": ".storybook/index.html",
            "main": ".storybook/main.ts",
            "tsConfig": "tsconfig.json",
            "styles": [
              "projects/shared-ui/src/lib/styles.css",
              {
                "input": "./node_modules/@fontsource/geist-sans/400.css",
                "bundleName": "geist-sans"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/500.css",
                "bundleName": "geist-sans"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/600.css",
                "bundleName": "geist-sans"
              },
              {
                "input": "./node_modules/@fontsource/geist-sans/700.css",
                "bundleName": "geist-sans"
              }
            ]
          }
        },
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "options": {
            "browserTarget": "storybook-host:build",
            "compodoc": false,
            "configDir": ".storybook"
          }
        },
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "options": {
            "browserTarget": "storybook-host:build",
            "compodoc": false,
            "configDir": ".storybook"
          }
        }
      }
    }
  }
}
