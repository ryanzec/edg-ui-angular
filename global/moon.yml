# scripts/moon.yml
$schema: 'https://moonrepo.dev/schemas/project.json'

type: 'tool'

workspace:
  inheritedTasks:
    # this is used for repository level tasks so we don't want to inherit any tasks from the global tasks
    include: []

tasks:
  deps:
    command: 'pnpm install'
    inputs:
      - '/pnpm-lock.yaml'
    # this can make the initial install really slow so for now, excluding this until I can figure it out more
    # outputs:
    #   - '/node_modules'
    options:
      runFromWorkspaceRoot: true

  storybook:
    command: '$workspaceRoot/node_modules/.bin/ng run storybook-host:storybook'
    inputs:
      - '/projects/**/*'
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  storybook-clean:
    command: 'sh -c "rm -rf $workspaceRoot/node_modules/.cache/storybook && $workspaceRoot/node_modules/.bin/ng run storybook-host:storybook"'
    local: true
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  test-storybook:
    command: 'sh -c "$workspaceRoot/node_modules/.bin/ng run storybook-host:build-storybook && $workspaceRoot/.moon/scripts/run-storybook-tests.sh"'
    inputs:
      - '/.storybook/**/*'
      - '/projects/**/*'
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  generate:
    command: 'node $workspaceRoot/.moon/scripts/ng-generate-runner.cjs'
    local: true
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  generate-type:
    command: 'node $workspaceRoot/.moon/scripts/generate-shared-type.cjs type'
    local: true
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  # since angular handle the monorepo type management for the projects it control, we have these commands as
  # part of the global tasks instead of inherited for each moon projects
  test-unit:
    command: '$workspaceRoot/node_modules/.bin/ng test --watch=false'
    inputs:
      - '/projects/**/*'
      - /**/*/tsconfig.spec.json
      - /**/*/src/test-providers.ts
      - /tsconfig.json
      - /angular.json
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  test-unit-watch:
    # command: '$workspaceRoot/node_modules/.bin/ng test --watch=true'
    command: 'sh -c "$workspaceRoot/node_modules/.bin/concurrently \"$workspaceRoot/node_modules/.bin/ng test customer-portal --watch=true\" \"$workspaceRoot/node_modules/.bin/ng test internal-portal --watch=true\" \"$workspaceRoot/node_modules/.bin/ng test shared-ui --watch=true\""'
    local: true
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  lint:
    command: '$workspaceRoot/node_modules/.bin/ng lint'
    inputs:
      - '/projects/**/*'
      - /eslint.config.cjs
      - /angular.json
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  format:
    command: 'sh -c "$workspaceRoot/node_modules/.bin/prettier --config $workspaceRoot/.prettierrc --ignore-path $workspaceRoot/.prettierignore --write . && $workspaceRoot/node_modules/.bin/ng lint --fix"'
    inputs:
      - '/projects/**/*'
      - /.prettierignore
      - /.prettierrc
      - /eslint.config.cjs
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  # this provides a configuration free was to easily access the pnpm command that moonrepo uses for it's toolchain
  pnpm:
    command: 'pnpm -w'
    local: true
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  clean-cache:
    command: 'sh -c "rm -rf $workspaceRoot/.moon/cache && rm -rf $workspaceRoot/node_modules/.cache/storybook && rm -rf .angular && $workspaceRoot/node_modules/.bin/ng cache clean"'
    local: true
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  clean-nuke:
    command: |
      sh -c "
        $workspaceRoot/node_modules/.bin/ng cache clean && \
        rm -rf $workspaceRoot/.angular && \
        rm -rf $workspaceRoot/.moon/cache && \
        rm -rf $workspaceRoot/node_modules && \
        rm -rf $workspaceRoot/pnpm-lock.yaml && \
        rm -rf $workspaceRoot/dist && \
        rm -rf $workspaceRoot/out-tsc && \
        rm -rf $workspaceRoot/storybook-static && \
        $(moon bin pnpm) store prune
        moon :deps
      "
    local: true
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true

  ng-version:
    command: '$workspaceRoot/node_modules/.bin/ng version'
    local: true
    env:
      NODE_ENV: 'development'
    options:
      runFromWorkspaceRoot: true
